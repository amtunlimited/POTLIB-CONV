      subroutine huti
      implicit double precision (a-h,o-z)
      common/angles/cosang(3),factor,ihomo,icnsym
      dimension lambda(3,16),p(16),ptt(64),wtt(64)
      dimension su(4),lamb(2,4),ri(3)
      common/rhc/rsm,rbi
      data lambda
     x/ 0,0,0, 2,0,0, 2,1,0, 2,1,1, 2,2,0, 2,2,1, 2,2,2, 0,1,0, 0,2,0,
     x    0,3,0, 0,4,0, 0,5,0, 0,6,0, 0,7,0, 0,8,0, 0,9,0/
      data lamb/0,0,2,0,2,1,2,2/
      data uh/1.008/,ucl/35.5/
      data wave/219474./,bohr/0.529177/
      data de/0.16968195/,be/0.98850282/,re/2.40940131/
      data damp/5./
      logical lvrtp,space
      open(39,file='hutson.d')
      gam=uh/(uh+ucl)
      gamp=ucl/(uh+ucl)
      i000=1
      i200=2
      ra2=4.0602
      mxlmb=16
      npt=12
      lvrtp=.true.
      space=.false.
      epsil=1. 
      rm=1.
      ihomo=1
      icnsym=1
      factor=1.
      call vrtp(-1,r,v)
      call gaussp(-1.d0,1.d0,npt,ptt,wtt)
      squ=sqrt(6.d0)
      return
      entry hutson(ri,vsig,vpi,v21,v22)
c convert internuclear distances to Jacobi coords
      sw=tanh(damp*(ri(1)-ri(3)))
      rsm=0.5*ri(1)*(1.-sw)+0.5*ri(3)*(1.+sw)
      rbi=0.5*ri(1)*(1.+sw)+0.5*ri(3)*(1.-sw)
c      rsm=min(ri(1),ri(3))
c      rbi=max(ri(1),ri(3))
      cang=-(rbi**2-rsm**2-ri(2)**2)/(2.*rsm*ri(2))
      ccl=gam*rsm
      dcl=gamp*rsm
      r=sqrt(ri(2)**2+ccl**2-2.*ri(2)*ccl*cang)
      x=-(rbi**2-r**2-dcl**2)/(2.*r*dcl)
      r=r*bohr
      do 17 i=1,mxlmb
   17 p(i)=0.
      do 18 ipt=1,npt
c      write(6,*) ptt(ipt),wtt(ipt)
c      ioft=mxlmb*(ipt-1)
      cosang(1)=ptt(ipt)
      call vrtp(0,r,sum)
      sum=sum*wtt(ipt)
      do 18 i=1,mxlmb
      if(lambda(1,i).eq.0.and.lambda(3,i).eq.0) then
      lamr=lambda(2,i)
      plm=(dble(lamr)+0.5d0)*pleg(lamr,ptt(ipt))
      p(i)=p(i)+sum*plm
      endif
   18 continue
      call velec(r,p,lambda,mxlmb,ra2,space)
      call var_cl(r,v0,v2)
      p(i000)=p(i000)+v0-var_ar(r)
      p(i200)=p(i200)+v2
      do 22 l=1,4
      su(l)=0.
      do 11 j=1,mxlmb
      if(lambda(1,j).eq.lamb(1,l).and.lambda(3,j).eq.lamb(2,l)) then
      plm= sqrt(2.d0/(2.d0*lambda(2,j)+1.d0))*
     x pasleg(lambda(2,j),lambda(3,j),x)
c      write(6,101)l,j, r,x,plm,(lambda(k,j),k=1,3),p(j)
      su(l)=su(l)+plm*p(j)
      endif
   11 continue
   22 continue
      if(x.gt..99999) su(3)=0.
      if(x.gt..99999) su(4)=0.
      if(x.lt.-.99999) su(3)=0.
      if(x.lt.-.99999) su(4)=0.
c      vm=de*(1.-exp(-be*(rsm-re)))**2
      vm=0.
      vsig= su(1)+0.4*su(2)
      vpi= su(1)-0.2*su(2)
      v22=su(4)
      v21=su(3)
c      vpi= su(1)-0.2*su(2)+0.2*squ*su(4)
c      vpi2= su(1)-0.2*su(2)-0.2*squ*su(4)
c      vcoup= 0.2*squ*su(3)
      if(abs(vsig).gt.50000.) vsig=50000.
      vsig=vsig/wave+vm
      write(25,*) r,x,vsig,su(4)
      if(abs(vpi).gt.50000.) vpi=50000.
      vpi=vpi/wave+vm
c      if(abs(vpi2).gt.50000.) vpi2=50000.
c      vpi2=vpi2/wave+vm
c      vcoup=vcoup/wave
      v22=v22/wave
      v21=v21/wave
  101 format(1x,2i5,3f7.3,3i2,f10.2)
      return
      end

